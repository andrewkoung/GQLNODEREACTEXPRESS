{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Desktop\\\\GQLNODEREACTEXPRESS\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'localhost:4000/',\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n      query GetLaunch {\n        launch(flight_number: 1) {\n          flight_number\n          mission_name\n          launch_year\n          launch_date_local\n          launch_sucess\n          rocket {\n            rocket_id\n            rocket_name\n            rocket_type\n          }\n        }\n      }\n    `\n}).then(result => console.log(result));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/Andrew/Desktop/GQLNODEREACTEXPRESS/client/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","ApolloClient","InMemoryCache","gql","client","uri","cache","query","then","result","console","log","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAkD,gBAAlD;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE,iBADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf;AAKAE,MAAM,CAACG,KAAP,CAAa;AACTA,EAAAA,KAAK,EAAEJ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBa,CAAb,EAkBGK,IAlBH,CAkBQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAlBlB;AAoBAX,QAAQ,CAACc,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAd,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, gql  } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'localhost:4000/',\n  cache: new InMemoryCache()\n}); \n\nclient.query({\n    query: gql`\n      query GetLaunch {\n        launch(flight_number: 1) {\n          flight_number\n          mission_name\n          launch_year\n          launch_date_local\n          launch_sucess\n          rocket {\n            rocket_id\n            rocket_name\n            rocket_type\n          }\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}